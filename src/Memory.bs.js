// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Card$MemoryGame = require("./Card.bs.js");

function reducer(state, action) {
  var i = action[0];
  var newGrid = Belt_Array.map(state[/* grid */0], (function (param) {
          var index = param[0];
          if (index === i) {
            return /* tuple */[
                    index,
                    /* Visible */1
                  ];
          } else {
            return /* tuple */[
                    index,
                    param[1]
                  ];
          }
        }));
  return /* record */[/* grid */newGrid];
}

function initialState(param) {
  var grid = Belt_Array.map(Belt_Array.range(0, 15), (function (i) {
          return /* tuple */[
                  i,
                  /* Hidden */0
                ];
        }));
  return /* record */[/* grid */grid];
}

function Memory(Props) {
  var match = React.useReducer(reducer, initialState(/* () */0));
  var dispatch = match[1];
  var cards = Belt_Array.map(match[0][/* grid */0], (function (param) {
          var i = param[0];
          return React.createElement(Card$MemoryGame.make, {
                      state: param[1],
                      value: String(i),
                      handleClick: (function (param) {
                          return Curry._1(dispatch, /* Turn */[i]);
                        })
                    });
        }));
  return React.createElement("div", {
              className: "app"
            }, React.createElement("div", {
                  className: "header"
                }, React.createElement("h1", undefined, "Functional Kortrijk Memory")), React.createElement("div", {
                  className: "board"
                }, cards));
}

var make = Memory;

exports.reducer = reducer;
exports.initialState = initialState;
exports.make = make;
/* react Not a pure module */
